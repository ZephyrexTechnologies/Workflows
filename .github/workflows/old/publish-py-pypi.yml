name: Reusable - PyPI Publish

on:
  workflow_call:
    inputs:
      python-version:
        description: "Python version to use"
        required: false
        type: string
        default: "3.10"
      pypi_repository_url:
        description: "The PyPI repository URL (for TestPyPI, use https://test.pypi.org/legacy/)"
        required: false
        type: string
        default: "https://upload.pypi.org/legacy/"
      working-directory:
        description: "Directory where the pyproject.toml is located"
        required: false
        type: string
        default: "."
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
    secrets:
      TWINE_USERNAME:
        description: "Twine username (usually __token__ for API tokens)"
        required: true
      TWINE_PASSWORD:
        description: "Twine password (the PyPI API token value)"
        required: true

jobs:
  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ${{ inputs.runs_on }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    permissions:
      contents: read # Needed to checkout the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          submodules: "recursive"
          fetch-depth: 0 # For setuptools-scm or similar versioning

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install build dependencies
        run: python -m pip install --upgrade pip build twine

      - name: Build package
        run: python -m build

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: python -m twine upload --repository-url ${{ inputs.pypi_repository_url }} dist/*
